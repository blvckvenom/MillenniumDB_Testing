
// Generated from GQLLexer.g4 by ANTLR 4.13.1

#pragma once


#include "antlr4-runtime.h"




class  GQLLexer : public antlr4::Lexer {
public:
  enum {
    AMPERSAND = 1, ASTERISK = 2, CIRCUMFLEX = 3, COLON = 4, COMMA = 5, DOLLAR_SIGN = 6, 
    EQUALS_OPERATOR = 7, EXCLAMATION_MARK = 8, RIGHT_ANGLE_BRACKET = 9, 
    LEFT_BRACE = 10, LEFT_BRACKET = 11, LEFT_PAREN = 12, LEFT_ANGLE_BRACKET = 13, 
    MINUS_SIGN = 14, PERCENT = 15, PERIOD = 16, PLUS_SIGN = 17, QUESTION_MARK = 18, 
    REVERSE_SOLIDUS = 19, RIGHT_BRACE = 20, RIGHT_BRACKET = 21, RIGHT_PAREN = 22, 
    SEMICOLON = 23, SOLIDUS = 24, TILDE = 25, UNDERSCORE = 26, VERTICAL_BAR = 27, 
    ABS = 28, ACOS = 29, ACYCLIC = 30, ALL = 31, ALL_DIFFERENT = 32, AND = 33, 
    ANY = 34, ARRAY = 35, AS = 36, ASC = 37, ASCENDING = 38, ASIN = 39, 
    AT = 40, ATAN = 41, AVG = 42, BIG = 43, BIGINT = 44, BINARY = 45, BINDING = 46, 
    BINDINGS = 47, BOOL = 48, BOOLEAN = 49, BOTH = 50, BTRIM = 51, BY = 52, 
    BYTE_LENGTH = 53, BYTES = 54, CALL = 55, CASE = 56, CAST = 57, CEIL = 58, 
    CEILING = 59, CHAR_LENGTH = 60, CHARACTER_LENGTH = 61, CHARACTERISTICS = 62, 
    CLOSE = 63, COALESCE = 64, COLLECT = 65, COMMIT = 66, CONNECTING = 67, 
    COPY = 68, COS = 69, COSH = 70, COT = 71, COUNT = 72, CREATE = 73, CURRENT_DATE = 74, 
    CURRENT_GRAPH = 75, CURRENT_PROPERTY_GRAPH = 76, CURRENT_SCHEMA = 77, 
    CURRENT_TIME = 78, CURRENT_TIMESTAMP = 79, CURRENT_USER = 80, DATE = 81, 
    DATETIME = 82, DEC = 83, DECIMAL = 84, DEGREES = 85, DELETE = 86, DESC = 87, 
    DESCENDING = 88, DESTINATION = 89, DETACH = 90, DIFFERENT = 91, DIRECTED = 92, 
    DISTINCT = 93, DOUBLE = 94, DROP = 95, DURATION = 96, DURATION_BETWEEN = 97, 
    ELEMENT = 98, ELEMENT_ID = 99, ELEMENTS = 100, ELSE = 101, END = 102, 
    EXCEPT = 103, EXISTS = 104, EXP = 105, K_FALSE = 106, FILTER = 107, 
    FINISH = 108, FIRST = 109, FLOAT = 110, FLOAT128 = 111, FLOAT16 = 112, 
    FLOAT256 = 113, FLOAT32 = 114, FLOAT64 = 115, FLOOR = 116, FOR = 117, 
    FROM = 118, GRAPH = 119, GROUP = 120, GROUPS = 121, HAVING = 122, HOME_GRAPH = 123, 
    HOME_PROPERTY_GRAPH = 124, HOME_SCHEMA = 125, I_DONT_KNOW_1 = 126, I_DONT_KNOW_2 = 127, 
    I_DONT_KNOW_3 = 128, I_DONT_KNOW_4 = 129, I_DONT_KNOW_5 = 130, IF = 131, 
    IN = 132, INSERT = 133, INT = 134, INT8 = 135, INT16 = 136, INT32 = 137, 
    INT64 = 138, INT128 = 139, INT256 = 140, INTEGER = 141, INTEGER8 = 142, 
    INTEGER16 = 143, INTEGER32 = 144, INTEGER64 = 145, INTEGER128 = 146, 
    INTEGER256 = 147, INTERSECT = 148, IS = 149, KEEP = 150, LABEL = 151, 
    LABELED = 152, LABELS = 153, LAST = 154, LEADING = 155, LEFT = 156, 
    LET = 157, LIKE = 158, LIMIT = 159, LIST = 160, LN = 161, LOCAL = 162, 
    LOCAL_DATETIME = 163, LOCAL_TIME = 164, LOCAL_TIMESTAMP = 165, LOG = 166, 
    LOG10 = 167, LOWER = 168, LTRIM = 169, MATCH = 170, MAX = 171, MIN = 172, 
    MOD = 173, NEXT = 174, NFC = 175, NFD = 176, NFKC = 177, NFKD = 178, 
    NO = 179, NODETACH = 180, NORMALIZE = 181, NORMALIZED = 182, NOT = 183, 
    NULL_ = 184, NULLIF = 185, NULLS = 186, OCTET_LENGTH = 187, OF = 188, 
    OFFSET = 189, SKIP_ = 190, ONLY = 191, OPEN = 192, OPTIONAL = 193, OR = 194, 
    ORDER = 195, ORDINALITY = 196, OTHERWISE = 197, PARAMETER = 198, PARAMETERS = 199, 
    PATH = 200, PATH_LENGTH = 201, PATHS = 202, PERCENTILE_CONT = 203, PERCENTILE_DISC = 204, 
    POWER = 205, PRECISION = 206, PROJECT = 207, PROPERTY = 208, PROPERTY_EXISTS = 209, 
    RADIANS = 210, READ = 211, REAL = 212, RECORD = 213, REMOVE = 214, REPEATABLE = 215, 
    REPLACE = 216, RESET = 217, RETURN = 218, ROLLBACK = 219, RTRIM = 220, 
    RIGHT = 221, SAME = 222, SCHEMA = 223, SELECT = 224, SESSION = 225, 
    SET = 226, SHORTEST = 227, SIGNED = 228, SIMPLE = 229, SIN = 230, SINH = 231, 
    SMALL = 232, SMALLINT = 233, SOURCE = 234, SQRT = 235, START = 236, 
    STDDEV_POP = 237, STDDEV_SAMP = 238, STRING = 239, SUM = 240, TABLE = 241, 
    TAN = 242, TANH = 243, TEMP = 244, THEN = 245, TIME = 246, TIMESTAMP = 247, 
    TIMEZONE = 248, TO = 249, TRAIL = 250, TRAILING = 251, TRANSACTION = 252, 
    TRIM = 253, K_TRUE = 254, TYPE = 255, TYPED = 256, UBIGINT = 257, UINT = 258, 
    UINT128 = 259, UINT16 = 260, UINT256 = 261, UINT32 = 262, UINT64 = 263, 
    UINT8 = 264, UNDIRECTED = 265, UNION = 266, UNKNOWN = 267, UNSIGNED = 268, 
    UPPER = 269, USE = 270, USMALLINT = 271, VALUE = 272, VARBINARY = 273, 
    VARCHAR = 274, VARIABLE = 275, WALK = 276, WHEN = 277, WHERE = 278, 
    WITH = 279, WITHOUT = 280, WRITE = 281, XOR = 282, YIELD = 283, ZONE = 284, 
    ZONED = 285, ZONED_DATETIME = 286, ZONED_TIME = 287, INTERVAL_DAY = 288, 
    INTERVAL_WEEK = 289, INTERVAL_MONTH = 290, INTERVAL_YEAR = 291, EDGE_SYNONYM = 292, 
    EDGES_SYNONYM = 293, NODE_SYNONYM = 294, KEY_WORD = 295, RESERVED_WORD = 296, 
    PRE_RESERVED_WORD = 297, NON_RESERVED_WORD = 298, MULTISET_ALTERNATION_OPERATOR = 299, 
    CONCATENATION_OPERATOR = 300, DOUBLE_COLON = 301, DOUBLE_PERIOD = 302, 
    GREATER_THAN_OR_EQUALS_OPERATOR = 303, LEFT_MINUS_RIGHT = 304, LEFT_MINUS_SLASH = 305, 
    LEFT_TILDE_SLASH = 306, LESS_THAN_OR_EQUALS_OPERATOR = 307, MINUS_SLASH = 308, 
    NOT_EQUALS_OPERATOR = 309, RIGHT_ARROW = 310, SLASH_MINUS_RIGHT = 311, 
    SLASH_TILDE_RIGHT = 312, TILDE_RIGHT_ARROW = 313, TILDE_SLASH = 314, 
    DOUBLE_SOLIDUS = 315, ESCAPED_CHARACTER = 316, ESCAPED_REVERSE_SOLIDUS = 317, 
    ESCAPED_QUOTE = 318, ESCAPED_DOUBLE_QUOTE = 319, ESCAPED_GRAVE_ACCENT = 320, 
    ESCAPED_TAB = 321, ESCAPED_BACKSPACE = 322, ESCAPED_NEWLINE = 323, ESCAPED_CARRIAGE_RETURN = 324, 
    ESCAPED_FORM_FEED = 325, UNICODE_ESCAPE_VALUE = 326, UNICODE_4_DIGIT_ESCAPE_VALUE = 327, 
    UNICODE_6_DIGIT_ESCAPE_VALUE = 328, UNSIGNED_DECIMAL_INTEGER = 329, 
    UNSIGNED_HEXADECIMAL_INTEGER = 330, UNSIGNED_OCTAL_INTEGER = 331, UNSIGNED_BINARY_INTEGER = 332, 
    UNSIGNED_DECIMAL_IN_SCIENTIFIC_NOTATION = 333, UNSIGNED_DECIMAL_IN_COMMON_NOTATION = 334, 
    FOUR_DIGIT = 335, DOUBLE_DIGIT = 336, SINGLE_QUOTED_STRING_LITERAL = 337, 
    DOUBLE_QUOTED_STRING_LITERAL = 338, ACCENT_QUOTED_STRING_LITERAL = 339, 
    BYTE_STRING_LITERAL = 340, QUOTE = 341, DOUBLE_QUOTE = 342, GRAVE_ACCENT = 343, 
    REGULAR_IDENTIFIER = 344, IDENTIFIER_START = 345, IDENTIFIER_EXTEND = 346, 
    SP = 347, SEPARATOR = 348, WHITESPACE = 349, Comment = 350, BIDIRECTIONAL_CONTROL_CHARACTER = 351, 
    COMMENT = 352, SIMPLE_COMMENT = 353, SIMPLE_COMMENT_INTRODUCER = 354, 
    SIMPLE_COMMENT_CHARACTER = 355, BRACKETED_COMMENT = 356, BRACKETED_COMMENT_INTRODUCER = 357, 
    BRACKETED_COMMENT_TERMINATOR = 358, BRACKETED_COMMENT_CONTENTS = 359, 
    GQL_TERMINAL_CHARACTER = 360, GQL_LANGUAGE_CHARACTER = 361, SIMPLE_LATIN_LETTER = 362, 
    SIMPLE_LATIN_LOWER_CASE_LETTER = 363, SIMPLE_LATIN_UPPER_CASE_LETTER = 364, 
    OTHER_DIGIT = 365, GQL_SPECIAL_CHARACTER = 366, OTHER_LANGUAGE_CHARACTER = 367
  };

  explicit GQLLexer(antlr4::CharStream *input);

  ~GQLLexer() override;


  std::string getGrammarFileName() const override;

  const std::vector<std::string>& getRuleNames() const override;

  const std::vector<std::string>& getChannelNames() const override;

  const std::vector<std::string>& getModeNames() const override;

  const antlr4::dfa::Vocabulary& getVocabulary() const override;

  antlr4::atn::SerializedATNView getSerializedATN() const override;

  const antlr4::atn::ATN& getATN() const override;

  // By default the static state used to implement the lexer is lazily initialized during the first
  // call to the constructor. You can call this function if you wish to initialize the static state
  // ahead of time.
  static void initialize();

private:

  // Individual action functions triggered by action() above.

  // Individual semantic predicate functions triggered by sempred() above.

};

