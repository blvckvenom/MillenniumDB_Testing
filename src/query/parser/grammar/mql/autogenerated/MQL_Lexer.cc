
// Generated from MQL_Lexer.g4 by ANTLR 4.13.1


#include "MQL_Lexer.h"


using namespace antlr4;



using namespace antlr4;

namespace {

struct MQL_LexerStaticData final {
  MQL_LexerStaticData(std::vector<std::string> ruleNames,
                          std::vector<std::string> channelNames,
                          std::vector<std::string> modeNames,
                          std::vector<std::string> literalNames,
                          std::vector<std::string> symbolicNames)
      : ruleNames(std::move(ruleNames)), channelNames(std::move(channelNames)),
        modeNames(std::move(modeNames)), literalNames(std::move(literalNames)),
        symbolicNames(std::move(symbolicNames)),
        vocabulary(this->literalNames, this->symbolicNames) {}

  MQL_LexerStaticData(const MQL_LexerStaticData&) = delete;
  MQL_LexerStaticData(MQL_LexerStaticData&&) = delete;
  MQL_LexerStaticData& operator=(const MQL_LexerStaticData&) = delete;
  MQL_LexerStaticData& operator=(MQL_LexerStaticData&&) = delete;

  std::vector<antlr4::dfa::DFA> decisionToDFA;
  antlr4::atn::PredictionContextCache sharedContextCache;
  const std::vector<std::string> ruleNames;
  const std::vector<std::string> channelNames;
  const std::vector<std::string> modeNames;
  const std::vector<std::string> literalNames;
  const std::vector<std::string> symbolicNames;
  const antlr4::dfa::Vocabulary vocabulary;
  antlr4::atn::SerializedATNView serializedATN;
  std::unique_ptr<antlr4::atn::ATN> atn;
};

::antlr4::internal::OnceFlag mql_lexerLexerOnceFlag;
#if ANTLR4_USE_THREAD_LOCAL_CACHE
static thread_local
#endif
MQL_LexerStaticData *mql_lexerLexerStaticData = nullptr;

void mql_lexerLexerInitialize() {
#if ANTLR4_USE_THREAD_LOCAL_CACHE
  if (mql_lexerLexerStaticData != nullptr) {
    return;
  }
#else
  assert(mql_lexerLexerStaticData == nullptr);
#endif
  auto staticData = std::make_unique<MQL_LexerStaticData>(
    std::vector<std::string>{
      "K_ACYCLIC", "K_AND", "K_ANGULAR", "K_ANY", "K_AS", "K_AVG", "K_ALL", 
      "K_ASC", "K_BY", "K_BOOL", "K_COUNT", "K_CREATE", "K_DELETE", "K_DESCRIBE", 
      "K_DESC", "K_DIMENSIONS", "K_DISTINCT", "K_EDGE", "K_EUCLIDEAN", "K_FROM", 
      "K_INCOMING", "K_INDEX", "K_IN", "K_INSERT", "K_INTEGER", "K_INTO", 
      "K_IS", "K_FALSE", "K_FLOAT", "K_GROUP", "K_GROUPS", "K_IDENTITY", 
      "K_LABELS", "K_LABEL", "K_LIMIT", "K_MANHATTAN", "K_MATCH", "K_MAX", 
      "K_MIN", "K_NFKD_CASEFOLD", "K_NORMALIZE", "K_OBJECTS", "K_OFFSET", 
      "K_ON", "K_OPTIONAL", "K_ORDER", "K_OR", "K_OUTGOING", "K_PREFIX", 
      "K_PROPERTIES", "K_PROPERTY", "K_NOT", "K_NULL", "K_SHORTEST", "K_SHOW", 
      "K_SIMPLE", "K_TENSOR_DISTANCE", "K_TEXT_SEARCH", "K_REGEX", "K_RETURN", 
      "K_SET", "K_SUM", "K_STRING", "K_STORE", "K_TENSOR", "K_TEXT", "K_TRUE", 
      "K_TOKENIZE", "K_TRAILS", "K_VALUES", "K_WALKS", "K_WITH", "K_WHERE", 
      "K_WS_KEEP_PUNCT", "K_WS_RM_PUNCT", "K_WS_SPLIT_PUNCT", "TRUE_PROP", 
      "FALSE_PROP", "ANON_ID", "EDGE_ID", "KEY", "TYPE", "TYPE_VAR", "VARIABLE", 
      "STRING", "UNSIGNED_INTEGER", "UNSIGNED_FLOAT", "UNSIGNED_SCIENTIFIC_NOTATION", 
      "NAME", "LEQ", "GEQ", "EQ", "NEQ", "LT", "GT", "SINGLE_EQ", "PATH_SEQUENCE", 
      "PATH_ALTERNATIVE", "PATH_NEGATION", "STAR", "PERCENT", "QUESTION_MARK", 
      "PLUS", "MINUS", "L_PAR", "R_PAR", "LCURLY_BRACKET", "RCURLY_BRACKET", 
      "LSQUARE_BRACKET", "RSQUARE_BRACKET", "COMMA", "COLON", "WHITE_SPACE", 
      "SINGLE_LINE_COMMENT", "UNRECOGNIZED", "DIGIT", "EXPONENT", "A", "B", 
      "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", 
      "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
    },
    std::vector<std::string>{
      "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    },
    std::vector<std::string>{
      "DEFAULT_MODE"
    },
    std::vector<std::string>{
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "'false'", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "'true'", "", "", "", "", "", "", "", "", "", "", "", "", "", 
      "", "", "", "", "", "", "", "", "", "'<='", "'>='", "'=='", "'!='", 
      "'<'", "'>'", "'='", "'/'", "'|'", "'^'", "'*'", "'%'", "'\\u003F'", 
      "'+'", "'-'", "'('", "')'", "'{'", "'}'", "'['", "']'", "','", "':'"
    },
    std::vector<std::string>{
      "", "K_ACYCLIC", "K_AND", "K_ANGULAR", "K_ANY", "K_AS", "K_AVG", "K_ALL", 
      "K_ASC", "K_BY", "K_BOOL", "K_COUNT", "K_CREATE", "K_DELETE", "K_DESCRIBE", 
      "K_DESC", "K_DIMENSIONS", "K_DISTINCT", "K_EDGE", "K_EUCLIDEAN", "K_FROM", 
      "K_INCOMING", "K_INDEX", "K_IN", "K_INSERT", "K_INTEGER", "K_INTO", 
      "K_IS", "K_FALSE", "K_FLOAT", "K_GROUP", "K_GROUPS", "K_IDENTITY", 
      "K_LABELS", "K_LABEL", "K_LIMIT", "K_MANHATTAN", "K_MATCH", "K_MAX", 
      "K_MIN", "K_NFKD_CASEFOLD", "K_NORMALIZE", "K_OBJECTS", "K_OFFSET", 
      "K_ON", "K_OPTIONAL", "K_ORDER", "K_OR", "K_OUTGOING", "K_PREFIX", 
      "K_PROPERTIES", "K_PROPERTY", "K_NOT", "K_NULL", "K_SHORTEST", "K_SHOW", 
      "K_SIMPLE", "K_TENSOR_DISTANCE", "K_TEXT_SEARCH", "K_REGEX", "K_RETURN", 
      "K_SET", "K_SUM", "K_STRING", "K_STORE", "K_TENSOR", "K_TEXT", "K_TRUE", 
      "K_TOKENIZE", "K_TRAILS", "K_VALUES", "K_WALKS", "K_WITH", "K_WHERE", 
      "K_WS_KEEP_PUNCT", "K_WS_RM_PUNCT", "K_WS_SPLIT_PUNCT", "TRUE_PROP", 
      "FALSE_PROP", "ANON_ID", "EDGE_ID", "KEY", "TYPE", "TYPE_VAR", "VARIABLE", 
      "STRING", "UNSIGNED_INTEGER", "UNSIGNED_FLOAT", "UNSIGNED_SCIENTIFIC_NOTATION", 
      "NAME", "LEQ", "GEQ", "EQ", "NEQ", "LT", "GT", "SINGLE_EQ", "PATH_SEQUENCE", 
      "PATH_ALTERNATIVE", "PATH_NEGATION", "STAR", "PERCENT", "QUESTION_MARK", 
      "PLUS", "MINUS", "L_PAR", "R_PAR", "LCURLY_BRACKET", "RCURLY_BRACKET", 
      "LSQUARE_BRACKET", "RSQUARE_BRACKET", "COMMA", "COLON", "WHITE_SPACE", 
      "SINGLE_LINE_COMMENT", "UNRECOGNIZED"
    }
  );
  static const int32_t serializedATNSegment[] = {
  	4,0,115,1088,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,
  	7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,
  	14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,
  	21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,
  	28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,
  	35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,
  	42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,
  	49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,
  	56,7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,
  	63,7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,
  	70,7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,
  	77,7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,
  	84,7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
  	91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,
  	98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,
  	7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,
  	7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,
  	7,116,2,117,7,117,2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,2,122,
  	7,122,2,123,7,123,2,124,7,124,2,125,7,125,2,126,7,126,2,127,7,127,2,128,
  	7,128,2,129,7,129,2,130,7,130,2,131,7,131,2,132,7,132,2,133,7,133,2,134,
  	7,134,2,135,7,135,2,136,7,136,2,137,7,137,2,138,7,138,2,139,7,139,2,140,
  	7,140,2,141,7,141,2,142,7,142,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,
  	1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,
  	5,1,5,1,5,1,5,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,9,1,9,1,9,
  	1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,
  	11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,
  	13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,
  	15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
  	17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,
  	18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,
  	20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,
  	23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,
  	25,1,25,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,
  	28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,
  	30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,
  	32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,
  	34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,
  	36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,39,1,39,1,
  	39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,
  	40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,
  	41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,44,1,
  	44,1,44,1,44,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,45,1,46,1,
  	46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,
  	48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,
  	49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,
  	52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,
  	54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,
  	56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,
  	57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,58,1,58,1,
  	58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,60,1,60,1,60,1,
  	60,1,61,1,61,1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,
  	63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,
  	65,1,65,1,66,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,
  	67,1,67,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,
  	69,1,69,1,70,1,70,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,71,1,72,1,
  	72,1,72,1,72,1,72,1,72,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,73,1,
  	73,1,73,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,
  	74,1,74,1,74,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,
  	75,1,75,1,75,1,75,1,76,1,76,1,76,1,76,1,76,1,76,1,77,1,77,1,77,1,77,1,
  	77,1,77,1,77,1,78,1,78,1,78,1,78,4,78,830,8,78,11,78,12,78,831,1,79,1,
  	79,1,79,1,79,4,79,838,8,79,11,79,12,79,839,1,80,1,80,1,80,5,80,845,8,
  	80,10,80,12,80,848,9,80,1,81,1,81,1,81,5,81,853,8,81,10,81,12,81,856,
  	9,81,1,82,1,82,1,82,1,82,5,82,862,8,82,10,82,12,82,865,9,82,1,83,1,83,
  	1,83,5,83,870,8,83,10,83,12,83,873,9,83,1,84,1,84,1,84,1,84,5,84,879,
  	8,84,10,84,12,84,882,9,84,1,84,1,84,1,85,4,85,887,8,85,11,85,12,85,888,
  	1,86,4,86,892,8,86,11,86,12,86,893,1,86,1,86,5,86,898,8,86,10,86,12,86,
  	901,9,86,1,86,1,86,4,86,905,8,86,11,86,12,86,906,3,86,909,8,86,1,87,4,
  	87,912,8,87,11,87,12,87,913,1,87,1,87,5,87,918,8,87,10,87,12,87,921,9,
  	87,1,87,1,87,1,87,1,87,4,87,927,8,87,11,87,12,87,928,1,87,1,87,1,87,4,
  	87,934,8,87,11,87,12,87,935,1,87,1,87,3,87,940,8,87,1,88,1,88,5,88,944,
  	8,88,10,88,12,88,947,9,88,1,89,1,89,1,89,1,90,1,90,1,90,1,91,1,91,1,91,
  	1,92,1,92,1,92,1,93,1,93,1,94,1,94,1,95,1,95,1,96,1,96,1,97,1,97,1,98,
  	1,98,1,99,1,99,1,100,1,100,1,101,1,101,1,102,1,102,1,103,1,103,1,104,
  	1,104,1,105,1,105,1,106,1,106,1,107,1,107,1,108,1,108,1,109,1,109,1,110,
  	1,110,1,111,1,111,1,112,4,112,1000,8,112,11,112,12,112,1001,1,112,1,112,
  	1,113,1,113,1,113,1,113,5,113,1010,8,113,10,113,12,113,1013,9,113,1,113,
  	3,113,1016,8,113,1,113,1,113,3,113,1020,8,113,1,113,1,113,1,114,1,114,
  	1,115,1,115,1,116,1,116,3,116,1030,8,116,1,116,4,116,1033,8,116,11,116,
  	12,116,1034,1,117,1,117,1,118,1,118,1,119,1,119,1,120,1,120,1,121,1,121,
  	1,122,1,122,1,123,1,123,1,124,1,124,1,125,1,125,1,126,1,126,1,127,1,127,
  	1,128,1,128,1,129,1,129,1,130,1,130,1,131,1,131,1,132,1,132,1,133,1,133,
  	1,134,1,134,1,135,1,135,1,136,1,136,1,137,1,137,1,138,1,138,1,139,1,139,
  	1,140,1,140,1,141,1,141,1,142,1,142,0,0,143,1,1,3,2,5,3,7,4,9,5,11,6,
  	13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
  	37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,
  	30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,
  	83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,105,
  	53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,125,
  	63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,141,71,143,72,145,
  	73,147,74,149,75,151,76,153,77,155,78,157,79,159,80,161,81,163,82,165,
  	83,167,84,169,85,171,86,173,87,175,88,177,89,179,90,181,91,183,92,185,
  	93,187,94,189,95,191,96,193,97,195,98,197,99,199,100,201,101,203,102,
  	205,103,207,104,209,105,211,106,213,107,215,108,217,109,219,110,221,111,
  	223,112,225,113,227,114,229,115,231,0,233,0,235,0,237,0,239,0,241,0,243,
  	0,245,0,247,0,249,0,251,0,253,0,255,0,257,0,259,0,261,0,263,0,265,0,267,
  	0,269,0,271,0,273,0,275,0,277,0,279,0,281,0,283,0,285,0,1,0,33,1,0,48,
  	57,2,0,65,90,97,122,4,0,48,57,65,90,95,95,97,122,1,0,34,34,3,0,9,10,13,
  	13,32,32,2,0,10,10,13,13,2,0,69,69,101,101,2,0,43,43,45,45,2,0,65,65,
  	97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,70,70,102,
  	102,2,0,71,71,103,103,2,0,72,72,104,104,2,0,73,73,105,105,2,0,74,74,106,
  	106,2,0,75,75,107,107,2,0,76,76,108,108,2,0,77,77,109,109,2,0,78,78,110,
  	110,2,0,79,79,111,111,2,0,80,80,112,112,2,0,81,81,113,113,2,0,82,82,114,
  	114,2,0,83,83,115,115,2,0,84,84,116,116,2,0,85,85,117,117,2,0,86,86,118,
  	118,2,0,87,87,119,119,2,0,88,88,120,120,2,0,89,89,121,121,2,0,90,90,122,
  	122,1085,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,
  	0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
  	1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,
  	0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,
  	0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,
  	1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,
  	0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,
  	0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,
  	1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,
  	0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,
  	0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,
  	0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,
  	0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,
  	0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,
  	0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,
  	0,0,157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,
  	0,0,167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,
  	0,0,177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,
  	0,0,187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,
  	0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,
  	0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,0,0,0,0,215,1,0,0,
  	0,0,217,1,0,0,0,0,219,1,0,0,0,0,221,1,0,0,0,0,223,1,0,0,0,0,225,1,0,0,
  	0,0,227,1,0,0,0,0,229,1,0,0,0,1,287,1,0,0,0,3,295,1,0,0,0,5,299,1,0,0,
  	0,7,307,1,0,0,0,9,311,1,0,0,0,11,314,1,0,0,0,13,318,1,0,0,0,15,322,1,
  	0,0,0,17,326,1,0,0,0,19,329,1,0,0,0,21,334,1,0,0,0,23,340,1,0,0,0,25,
  	347,1,0,0,0,27,354,1,0,0,0,29,363,1,0,0,0,31,368,1,0,0,0,33,379,1,0,0,
  	0,35,388,1,0,0,0,37,393,1,0,0,0,39,403,1,0,0,0,41,408,1,0,0,0,43,417,
  	1,0,0,0,45,423,1,0,0,0,47,426,1,0,0,0,49,433,1,0,0,0,51,441,1,0,0,0,53,
  	446,1,0,0,0,55,449,1,0,0,0,57,455,1,0,0,0,59,461,1,0,0,0,61,467,1,0,0,
  	0,63,474,1,0,0,0,65,483,1,0,0,0,67,490,1,0,0,0,69,496,1,0,0,0,71,502,
  	1,0,0,0,73,512,1,0,0,0,75,518,1,0,0,0,77,522,1,0,0,0,79,526,1,0,0,0,81,
  	540,1,0,0,0,83,550,1,0,0,0,85,558,1,0,0,0,87,565,1,0,0,0,89,568,1,0,0,
  	0,91,577,1,0,0,0,93,583,1,0,0,0,95,586,1,0,0,0,97,595,1,0,0,0,99,602,
  	1,0,0,0,101,613,1,0,0,0,103,622,1,0,0,0,105,626,1,0,0,0,107,631,1,0,0,
  	0,109,640,1,0,0,0,111,645,1,0,0,0,113,652,1,0,0,0,115,668,1,0,0,0,117,
  	680,1,0,0,0,119,686,1,0,0,0,121,693,1,0,0,0,123,697,1,0,0,0,125,701,1,
  	0,0,0,127,708,1,0,0,0,129,714,1,0,0,0,131,721,1,0,0,0,133,726,1,0,0,0,
  	135,731,1,0,0,0,137,740,1,0,0,0,139,747,1,0,0,0,141,754,1,0,0,0,143,760,
  	1,0,0,0,145,765,1,0,0,0,147,771,1,0,0,0,149,785,1,0,0,0,151,797,1,0,0,
  	0,153,812,1,0,0,0,155,818,1,0,0,0,157,825,1,0,0,0,159,833,1,0,0,0,161,
  	841,1,0,0,0,163,849,1,0,0,0,165,857,1,0,0,0,167,866,1,0,0,0,169,874,1,
  	0,0,0,171,886,1,0,0,0,173,908,1,0,0,0,175,939,1,0,0,0,177,941,1,0,0,0,
  	179,948,1,0,0,0,181,951,1,0,0,0,183,954,1,0,0,0,185,957,1,0,0,0,187,960,
  	1,0,0,0,189,962,1,0,0,0,191,964,1,0,0,0,193,966,1,0,0,0,195,968,1,0,0,
  	0,197,970,1,0,0,0,199,972,1,0,0,0,201,974,1,0,0,0,203,976,1,0,0,0,205,
  	978,1,0,0,0,207,980,1,0,0,0,209,982,1,0,0,0,211,984,1,0,0,0,213,986,1,
  	0,0,0,215,988,1,0,0,0,217,990,1,0,0,0,219,992,1,0,0,0,221,994,1,0,0,0,
  	223,996,1,0,0,0,225,999,1,0,0,0,227,1005,1,0,0,0,229,1023,1,0,0,0,231,
  	1025,1,0,0,0,233,1027,1,0,0,0,235,1036,1,0,0,0,237,1038,1,0,0,0,239,1040,
  	1,0,0,0,241,1042,1,0,0,0,243,1044,1,0,0,0,245,1046,1,0,0,0,247,1048,1,
  	0,0,0,249,1050,1,0,0,0,251,1052,1,0,0,0,253,1054,1,0,0,0,255,1056,1,0,
  	0,0,257,1058,1,0,0,0,259,1060,1,0,0,0,261,1062,1,0,0,0,263,1064,1,0,0,
  	0,265,1066,1,0,0,0,267,1068,1,0,0,0,269,1070,1,0,0,0,271,1072,1,0,0,0,
  	273,1074,1,0,0,0,275,1076,1,0,0,0,277,1078,1,0,0,0,279,1080,1,0,0,0,281,
  	1082,1,0,0,0,283,1084,1,0,0,0,285,1086,1,0,0,0,287,288,3,235,117,0,288,
  	289,3,239,119,0,289,290,3,283,141,0,290,291,3,239,119,0,291,292,3,257,
  	128,0,292,293,3,251,125,0,293,294,3,239,119,0,294,2,1,0,0,0,295,296,3,
  	235,117,0,296,297,3,261,130,0,297,298,3,241,120,0,298,4,1,0,0,0,299,300,
  	3,235,117,0,300,301,3,261,130,0,301,302,3,247,123,0,302,303,3,275,137,
  	0,303,304,3,257,128,0,304,305,3,235,117,0,305,306,3,269,134,0,306,6,1,
  	0,0,0,307,308,3,235,117,0,308,309,3,261,130,0,309,310,3,283,141,0,310,
  	8,1,0,0,0,311,312,3,235,117,0,312,313,3,271,135,0,313,10,1,0,0,0,314,
  	315,3,235,117,0,315,316,3,277,138,0,316,317,3,247,123,0,317,12,1,0,0,
  	0,318,319,3,235,117,0,319,320,3,257,128,0,320,321,3,257,128,0,321,14,
  	1,0,0,0,322,323,3,235,117,0,323,324,3,271,135,0,324,325,3,239,119,0,325,
  	16,1,0,0,0,326,327,3,237,118,0,327,328,3,283,141,0,328,18,1,0,0,0,329,
  	330,3,237,118,0,330,331,3,263,131,0,331,332,3,263,131,0,332,333,3,257,
  	128,0,333,20,1,0,0,0,334,335,3,239,119,0,335,336,3,263,131,0,336,337,
  	3,275,137,0,337,338,3,261,130,0,338,339,3,273,136,0,339,22,1,0,0,0,340,
  	341,3,239,119,0,341,342,3,269,134,0,342,343,3,243,121,0,343,344,3,235,
  	117,0,344,345,3,273,136,0,345,346,3,243,121,0,346,24,1,0,0,0,347,348,
  	3,241,120,0,348,349,3,243,121,0,349,350,3,257,128,0,350,351,3,243,121,
  	0,351,352,3,273,136,0,352,353,3,243,121,0,353,26,1,0,0,0,354,355,3,241,
  	120,0,355,356,3,243,121,0,356,357,3,271,135,0,357,358,3,239,119,0,358,
  	359,3,269,134,0,359,360,3,251,125,0,360,361,3,237,118,0,361,362,3,243,
  	121,0,362,28,1,0,0,0,363,364,3,241,120,0,364,365,3,243,121,0,365,366,
  	3,271,135,0,366,367,3,239,119,0,367,30,1,0,0,0,368,369,3,241,120,0,369,
  	370,3,251,125,0,370,371,3,259,129,0,371,372,3,243,121,0,372,373,3,261,
  	130,0,373,374,3,271,135,0,374,375,3,251,125,0,375,376,3,263,131,0,376,
  	377,3,261,130,0,377,378,3,271,135,0,378,32,1,0,0,0,379,380,3,241,120,
  	0,380,381,3,251,125,0,381,382,3,271,135,0,382,383,3,273,136,0,383,384,
  	3,251,125,0,384,385,3,261,130,0,385,386,3,239,119,0,386,387,3,273,136,
  	0,387,34,1,0,0,0,388,389,3,243,121,0,389,390,3,241,120,0,390,391,3,247,
  	123,0,391,392,3,243,121,0,392,36,1,0,0,0,393,394,3,243,121,0,394,395,
  	3,275,137,0,395,396,3,239,119,0,396,397,3,257,128,0,397,398,3,251,125,
  	0,398,399,3,241,120,0,399,400,3,243,121,0,400,401,3,235,117,0,401,402,
  	3,261,130,0,402,38,1,0,0,0,403,404,3,245,122,0,404,405,3,269,134,0,405,
  	406,3,263,131,0,406,407,3,259,129,0,407,40,1,0,0,0,408,409,3,251,125,
  	0,409,410,3,261,130,0,410,411,3,239,119,0,411,412,3,263,131,0,412,413,
  	3,259,129,0,413,414,3,251,125,0,414,415,3,261,130,0,415,416,3,247,123,
  	0,416,42,1,0,0,0,417,418,3,251,125,0,418,419,3,261,130,0,419,420,3,241,
  	120,0,420,421,3,243,121,0,421,422,3,281,140,0,422,44,1,0,0,0,423,424,
  	3,251,125,0,424,425,3,261,130,0,425,46,1,0,0,0,426,427,3,251,125,0,427,
  	428,3,261,130,0,428,429,3,271,135,0,429,430,3,243,121,0,430,431,3,269,
  	134,0,431,432,3,273,136,0,432,48,1,0,0,0,433,434,3,251,125,0,434,435,
  	3,261,130,0,435,436,3,273,136,0,436,437,3,243,121,0,437,438,3,247,123,
  	0,438,439,3,243,121,0,439,440,3,269,134,0,440,50,1,0,0,0,441,442,3,251,
  	125,0,442,443,3,261,130,0,443,444,3,273,136,0,444,445,3,263,131,0,445,
  	52,1,0,0,0,446,447,3,251,125,0,447,448,3,271,135,0,448,54,1,0,0,0,449,
  	450,5,102,0,0,450,451,5,97,0,0,451,452,5,108,0,0,452,453,5,115,0,0,453,
  	454,5,101,0,0,454,56,1,0,0,0,455,456,3,245,122,0,456,457,3,257,128,0,
  	457,458,3,263,131,0,458,459,3,235,117,0,459,460,3,273,136,0,460,58,1,
  	0,0,0,461,462,3,247,123,0,462,463,3,269,134,0,463,464,3,263,131,0,464,
  	465,3,275,137,0,465,466,3,265,132,0,466,60,1,0,0,0,467,468,3,247,123,
  	0,468,469,3,269,134,0,469,470,3,263,131,0,470,471,3,275,137,0,471,472,
  	3,265,132,0,472,473,3,271,135,0,473,62,1,0,0,0,474,475,3,251,125,0,475,
  	476,3,241,120,0,476,477,3,243,121,0,477,478,3,261,130,0,478,479,3,273,
  	136,0,479,480,3,251,125,0,480,481,3,273,136,0,481,482,3,283,141,0,482,
  	64,1,0,0,0,483,484,3,257,128,0,484,485,3,235,117,0,485,486,3,237,118,
  	0,486,487,3,243,121,0,487,488,3,257,128,0,488,489,3,271,135,0,489,66,
  	1,0,0,0,490,491,3,257,128,0,491,492,3,235,117,0,492,493,3,237,118,0,493,
  	494,3,243,121,0,494,495,3,257,128,0,495,68,1,0,0,0,496,497,3,257,128,
  	0,497,498,3,251,125,0,498,499,3,259,129,0,499,500,3,251,125,0,500,501,
  	3,273,136,0,501,70,1,0,0,0,502,503,3,259,129,0,503,504,3,235,117,0,504,
  	505,3,261,130,0,505,506,3,249,124,0,506,507,3,235,117,0,507,508,3,273,
  	136,0,508,509,3,273,136,0,509,510,3,235,117,0,510,511,3,261,130,0,511,
  	72,1,0,0,0,512,513,3,259,129,0,513,514,3,235,117,0,514,515,3,273,136,
  	0,515,516,3,239,119,0,516,517,3,249,124,0,517,74,1,0,0,0,518,519,3,259,
  	129,0,519,520,3,235,117,0,520,521,3,281,140,0,521,76,1,0,0,0,522,523,
  	3,259,129,0,523,524,3,251,125,0,524,525,3,261,130,0,525,78,1,0,0,0,526,
  	527,3,261,130,0,527,528,3,245,122,0,528,529,3,255,127,0,529,530,3,241,
  	120,0,530,531,5,95,0,0,531,532,3,239,119,0,532,533,3,235,117,0,533,534,
  	3,271,135,0,534,535,3,243,121,0,535,536,3,245,122,0,536,537,3,263,131,
  	0,537,538,3,257,128,0,538,539,3,241,120,0,539,80,1,0,0,0,540,541,3,261,
  	130,0,541,542,3,263,131,0,542,543,3,269,134,0,543,544,3,259,129,0,544,
  	545,3,235,117,0,545,546,3,257,128,0,546,547,3,251,125,0,547,548,3,285,
  	142,0,548,549,3,243,121,0,549,82,1,0,0,0,550,551,3,263,131,0,551,552,
  	3,237,118,0,552,553,3,253,126,0,553,554,3,243,121,0,554,555,3,239,119,
  	0,555,556,3,273,136,0,556,557,3,271,135,0,557,84,1,0,0,0,558,559,3,263,
  	131,0,559,560,3,245,122,0,560,561,3,245,122,0,561,562,3,271,135,0,562,
  	563,3,243,121,0,563,564,3,273,136,0,564,86,1,0,0,0,565,566,3,263,131,
  	0,566,567,3,261,130,0,567,88,1,0,0,0,568,569,3,263,131,0,569,570,3,265,
  	132,0,570,571,3,273,136,0,571,572,3,251,125,0,572,573,3,263,131,0,573,
  	574,3,261,130,0,574,575,3,235,117,0,575,576,3,257,128,0,576,90,1,0,0,
  	0,577,578,3,263,131,0,578,579,3,269,134,0,579,580,3,241,120,0,580,581,
  	3,243,121,0,581,582,3,269,134,0,582,92,1,0,0,0,583,584,3,263,131,0,584,
  	585,3,269,134,0,585,94,1,0,0,0,586,587,3,263,131,0,587,588,3,275,137,
  	0,588,589,3,273,136,0,589,590,3,247,123,0,590,591,3,263,131,0,591,592,
  	3,251,125,0,592,593,3,261,130,0,593,594,3,247,123,0,594,96,1,0,0,0,595,
  	596,3,265,132,0,596,597,3,269,134,0,597,598,3,243,121,0,598,599,3,245,
  	122,0,599,600,3,251,125,0,600,601,3,281,140,0,601,98,1,0,0,0,602,603,
  	3,265,132,0,603,604,3,269,134,0,604,605,3,263,131,0,605,606,3,265,132,
  	0,606,607,3,243,121,0,607,608,3,269,134,0,608,609,3,273,136,0,609,610,
  	3,251,125,0,610,611,3,243,121,0,611,612,3,271,135,0,612,100,1,0,0,0,613,
  	614,3,265,132,0,614,615,3,269,134,0,615,616,3,263,131,0,616,617,3,265,
  	132,0,617,618,3,243,121,0,618,619,3,269,134,0,619,620,3,273,136,0,620,
  	621,3,283,141,0,621,102,1,0,0,0,622,623,3,261,130,0,623,624,3,263,131,
  	0,624,625,3,273,136,0,625,104,1,0,0,0,626,627,3,261,130,0,627,628,3,275,
  	137,0,628,629,3,257,128,0,629,630,3,257,128,0,630,106,1,0,0,0,631,632,
  	3,271,135,0,632,633,3,249,124,0,633,634,3,263,131,0,634,635,3,269,134,
  	0,635,636,3,273,136,0,636,637,3,243,121,0,637,638,3,271,135,0,638,639,
  	3,273,136,0,639,108,1,0,0,0,640,641,3,271,135,0,641,642,3,249,124,0,642,
  	643,3,263,131,0,643,644,3,279,139,0,644,110,1,0,0,0,645,646,3,271,135,
  	0,646,647,3,251,125,0,647,648,3,259,129,0,648,649,3,265,132,0,649,650,
  	3,257,128,0,650,651,3,243,121,0,651,112,1,0,0,0,652,653,3,273,136,0,653,
  	654,3,243,121,0,654,655,3,261,130,0,655,656,3,271,135,0,656,657,3,263,
  	131,0,657,658,3,269,134,0,658,659,5,95,0,0,659,660,3,241,120,0,660,661,
  	3,251,125,0,661,662,3,271,135,0,662,663,3,273,136,0,663,664,3,235,117,
  	0,664,665,3,261,130,0,665,666,3,239,119,0,666,667,3,243,121,0,667,114,
  	1,0,0,0,668,669,3,273,136,0,669,670,3,243,121,0,670,671,3,281,140,0,671,
  	672,3,273,136,0,672,673,5,95,0,0,673,674,3,271,135,0,674,675,3,243,121,
  	0,675,676,3,235,117,0,676,677,3,269,134,0,677,678,3,239,119,0,678,679,
  	3,249,124,0,679,116,1,0,0,0,680,681,3,269,134,0,681,682,3,243,121,0,682,
  	683,3,247,123,0,683,684,3,243,121,0,684,685,3,281,140,0,685,118,1,0,0,
  	0,686,687,3,269,134,0,687,688,3,243,121,0,688,689,3,273,136,0,689,690,
  	3,275,137,0,690,691,3,269,134,0,691,692,3,261,130,0,692,120,1,0,0,0,693,
  	694,3,271,135,0,694,695,3,243,121,0,695,696,3,273,136,0,696,122,1,0,0,
  	0,697,698,3,271,135,0,698,699,3,275,137,0,699,700,3,259,129,0,700,124,
  	1,0,0,0,701,702,3,271,135,0,702,703,3,273,136,0,703,704,3,269,134,0,704,
  	705,3,251,125,0,705,706,3,261,130,0,706,707,3,247,123,0,707,126,1,0,0,
  	0,708,709,3,271,135,0,709,710,3,273,136,0,710,711,3,263,131,0,711,712,
  	3,269,134,0,712,713,3,243,121,0,713,128,1,0,0,0,714,715,3,273,136,0,715,
  	716,3,243,121,0,716,717,3,261,130,0,717,718,3,271,135,0,718,719,3,263,
  	131,0,719,720,3,269,134,0,720,130,1,0,0,0,721,722,3,273,136,0,722,723,
  	3,243,121,0,723,724,3,281,140,0,724,725,3,273,136,0,725,132,1,0,0,0,726,
  	727,5,116,0,0,727,728,5,114,0,0,728,729,5,117,0,0,729,730,5,101,0,0,730,
  	134,1,0,0,0,731,732,3,273,136,0,732,733,3,263,131,0,733,734,3,255,127,
  	0,734,735,3,243,121,0,735,736,3,261,130,0,736,737,3,251,125,0,737,738,
  	3,285,142,0,738,739,3,243,121,0,739,136,1,0,0,0,740,741,3,273,136,0,741,
  	742,3,269,134,0,742,743,3,235,117,0,743,744,3,251,125,0,744,745,3,257,
  	128,0,745,746,3,271,135,0,746,138,1,0,0,0,747,748,3,277,138,0,748,749,
  	3,235,117,0,749,750,3,257,128,0,750,751,3,275,137,0,751,752,3,243,121,
  	0,752,753,3,271,135,0,753,140,1,0,0,0,754,755,3,279,139,0,755,756,3,235,
  	117,0,756,757,3,257,128,0,757,758,3,255,127,0,758,759,3,271,135,0,759,
  	142,1,0,0,0,760,761,3,279,139,0,761,762,3,251,125,0,762,763,3,273,136,
  	0,763,764,3,249,124,0,764,144,1,0,0,0,765,766,3,279,139,0,766,767,3,249,
  	124,0,767,768,3,243,121,0,768,769,3,269,134,0,769,770,3,243,121,0,770,
  	146,1,0,0,0,771,772,3,279,139,0,772,773,3,271,135,0,773,774,5,95,0,0,
  	774,775,3,255,127,0,775,776,3,243,121,0,776,777,3,243,121,0,777,778,3,
  	265,132,0,778,779,5,95,0,0,779,780,3,265,132,0,780,781,3,275,137,0,781,
  	782,3,261,130,0,782,783,3,239,119,0,783,784,3,273,136,0,784,148,1,0,0,
  	0,785,786,3,279,139,0,786,787,3,271,135,0,787,788,5,95,0,0,788,789,3,
  	269,134,0,789,790,3,259,129,0,790,791,5,95,0,0,791,792,3,265,132,0,792,
  	793,3,275,137,0,793,794,3,261,130,0,794,795,3,239,119,0,795,796,3,273,
  	136,0,796,150,1,0,0,0,797,798,3,279,139,0,798,799,3,271,135,0,799,800,
  	5,95,0,0,800,801,3,271,135,0,801,802,3,265,132,0,802,803,3,257,128,0,
  	803,804,3,251,125,0,804,805,3,273,136,0,805,806,5,95,0,0,806,807,3,265,
  	132,0,807,808,3,275,137,0,808,809,3,261,130,0,809,810,3,239,119,0,810,
  	811,3,273,136,0,811,152,1,0,0,0,812,813,5,58,0,0,813,814,5,116,0,0,814,
  	815,5,114,0,0,815,816,5,117,0,0,816,817,5,101,0,0,817,154,1,0,0,0,818,
  	819,5,58,0,0,819,820,5,102,0,0,820,821,5,97,0,0,821,822,5,108,0,0,822,
  	823,5,115,0,0,823,824,5,101,0,0,824,156,1,0,0,0,825,826,5,95,0,0,826,
  	827,5,97,0,0,827,829,1,0,0,0,828,830,7,0,0,0,829,828,1,0,0,0,830,831,
  	1,0,0,0,831,829,1,0,0,0,831,832,1,0,0,0,832,158,1,0,0,0,833,834,5,95,
  	0,0,834,835,5,101,0,0,835,837,1,0,0,0,836,838,7,0,0,0,837,836,1,0,0,0,
  	838,839,1,0,0,0,839,837,1,0,0,0,839,840,1,0,0,0,840,160,1,0,0,0,841,842,
  	5,46,0,0,842,846,7,1,0,0,843,845,7,2,0,0,844,843,1,0,0,0,845,848,1,0,
  	0,0,846,844,1,0,0,0,846,847,1,0,0,0,847,162,1,0,0,0,848,846,1,0,0,0,849,
  	850,5,58,0,0,850,854,7,1,0,0,851,853,7,2,0,0,852,851,1,0,0,0,853,856,
  	1,0,0,0,854,852,1,0,0,0,854,855,1,0,0,0,855,164,1,0,0,0,856,854,1,0,0,
  	0,857,858,5,58,0,0,858,859,5,63,0,0,859,863,7,1,0,0,860,862,7,2,0,0,861,
  	860,1,0,0,0,862,865,1,0,0,0,863,861,1,0,0,0,863,864,1,0,0,0,864,166,1,
  	0,0,0,865,863,1,0,0,0,866,867,5,63,0,0,867,871,7,1,0,0,868,870,7,2,0,
  	0,869,868,1,0,0,0,870,873,1,0,0,0,871,869,1,0,0,0,871,872,1,0,0,0,872,
  	168,1,0,0,0,873,871,1,0,0,0,874,880,5,34,0,0,875,879,8,3,0,0,876,877,
  	5,92,0,0,877,879,5,34,0,0,878,875,1,0,0,0,878,876,1,0,0,0,879,882,1,0,
  	0,0,880,878,1,0,0,0,880,881,1,0,0,0,881,883,1,0,0,0,882,880,1,0,0,0,883,
  	884,5,34,0,0,884,170,1,0,0,0,885,887,3,231,115,0,886,885,1,0,0,0,887,
  	888,1,0,0,0,888,886,1,0,0,0,888,889,1,0,0,0,889,172,1,0,0,0,890,892,3,
  	231,115,0,891,890,1,0,0,0,892,893,1,0,0,0,893,891,1,0,0,0,893,894,1,0,
  	0,0,894,895,1,0,0,0,895,899,5,46,0,0,896,898,3,231,115,0,897,896,1,0,
  	0,0,898,901,1,0,0,0,899,897,1,0,0,0,899,900,1,0,0,0,900,909,1,0,0,0,901,
  	899,1,0,0,0,902,904,5,46,0,0,903,905,3,231,115,0,904,903,1,0,0,0,905,
  	906,1,0,0,0,906,904,1,0,0,0,906,907,1,0,0,0,907,909,1,0,0,0,908,891,1,
  	0,0,0,908,902,1,0,0,0,909,174,1,0,0,0,910,912,3,231,115,0,911,910,1,0,
  	0,0,912,913,1,0,0,0,913,911,1,0,0,0,913,914,1,0,0,0,914,915,1,0,0,0,915,
  	919,5,46,0,0,916,918,3,231,115,0,917,916,1,0,0,0,918,921,1,0,0,0,919,
  	917,1,0,0,0,919,920,1,0,0,0,920,922,1,0,0,0,921,919,1,0,0,0,922,923,3,
  	233,116,0,923,940,1,0,0,0,924,926,5,46,0,0,925,927,3,231,115,0,926,925,
  	1,0,0,0,927,928,1,0,0,0,928,926,1,0,0,0,928,929,1,0,0,0,929,930,1,0,0,
  	0,930,931,3,233,116,0,931,940,1,0,0,0,932,934,3,231,115,0,933,932,1,0,
  	0,0,934,935,1,0,0,0,935,933,1,0,0,0,935,936,1,0,0,0,936,937,1,0,0,0,937,
  	938,3,233,116,0,938,940,1,0,0,0,939,911,1,0,0,0,939,924,1,0,0,0,939,933,
  	1,0,0,0,940,176,1,0,0,0,941,945,7,1,0,0,942,944,7,2,0,0,943,942,1,0,0,
  	0,944,947,1,0,0,0,945,943,1,0,0,0,945,946,1,0,0,0,946,178,1,0,0,0,947,
  	945,1,0,0,0,948,949,5,60,0,0,949,950,5,61,0,0,950,180,1,0,0,0,951,952,
  	5,62,0,0,952,953,5,61,0,0,953,182,1,0,0,0,954,955,5,61,0,0,955,956,5,
  	61,0,0,956,184,1,0,0,0,957,958,5,33,0,0,958,959,5,61,0,0,959,186,1,0,
  	0,0,960,961,5,60,0,0,961,188,1,0,0,0,962,963,5,62,0,0,963,190,1,0,0,0,
  	964,965,5,61,0,0,965,192,1,0,0,0,966,967,5,47,0,0,967,194,1,0,0,0,968,
  	969,5,124,0,0,969,196,1,0,0,0,970,971,5,94,0,0,971,198,1,0,0,0,972,973,
  	5,42,0,0,973,200,1,0,0,0,974,975,5,37,0,0,975,202,1,0,0,0,976,977,5,63,
  	0,0,977,204,1,0,0,0,978,979,5,43,0,0,979,206,1,0,0,0,980,981,5,45,0,0,
  	981,208,1,0,0,0,982,983,5,40,0,0,983,210,1,0,0,0,984,985,5,41,0,0,985,
  	212,1,0,0,0,986,987,5,123,0,0,987,214,1,0,0,0,988,989,5,125,0,0,989,216,
  	1,0,0,0,990,991,5,91,0,0,991,218,1,0,0,0,992,993,5,93,0,0,993,220,1,0,
  	0,0,994,995,5,44,0,0,995,222,1,0,0,0,996,997,5,58,0,0,997,224,1,0,0,0,
  	998,1000,7,4,0,0,999,998,1,0,0,0,1000,1001,1,0,0,0,1001,999,1,0,0,0,1001,
  	1002,1,0,0,0,1002,1003,1,0,0,0,1003,1004,6,112,0,0,1004,226,1,0,0,0,1005,
  	1006,5,47,0,0,1006,1007,5,47,0,0,1007,1011,1,0,0,0,1008,1010,8,5,0,0,
  	1009,1008,1,0,0,0,1010,1013,1,0,0,0,1011,1009,1,0,0,0,1011,1012,1,0,0,
  	0,1012,1019,1,0,0,0,1013,1011,1,0,0,0,1014,1016,5,13,0,0,1015,1014,1,
  	0,0,0,1015,1016,1,0,0,0,1016,1017,1,0,0,0,1017,1020,5,10,0,0,1018,1020,
  	5,0,0,1,1019,1015,1,0,0,0,1019,1018,1,0,0,0,1020,1021,1,0,0,0,1021,1022,
  	6,113,1,0,1022,228,1,0,0,0,1023,1024,9,0,0,0,1024,230,1,0,0,0,1025,1026,
  	7,0,0,0,1026,232,1,0,0,0,1027,1029,7,6,0,0,1028,1030,7,7,0,0,1029,1028,
  	1,0,0,0,1029,1030,1,0,0,0,1030,1032,1,0,0,0,1031,1033,3,231,115,0,1032,
  	1031,1,0,0,0,1033,1034,1,0,0,0,1034,1032,1,0,0,0,1034,1035,1,0,0,0,1035,
  	234,1,0,0,0,1036,1037,7,8,0,0,1037,236,1,0,0,0,1038,1039,7,9,0,0,1039,
  	238,1,0,0,0,1040,1041,7,10,0,0,1041,240,1,0,0,0,1042,1043,7,11,0,0,1043,
  	242,1,0,0,0,1044,1045,7,6,0,0,1045,244,1,0,0,0,1046,1047,7,12,0,0,1047,
  	246,1,0,0,0,1048,1049,7,13,0,0,1049,248,1,0,0,0,1050,1051,7,14,0,0,1051,
  	250,1,0,0,0,1052,1053,7,15,0,0,1053,252,1,0,0,0,1054,1055,7,16,0,0,1055,
  	254,1,0,0,0,1056,1057,7,17,0,0,1057,256,1,0,0,0,1058,1059,7,18,0,0,1059,
  	258,1,0,0,0,1060,1061,7,19,0,0,1061,260,1,0,0,0,1062,1063,7,20,0,0,1063,
  	262,1,0,0,0,1064,1065,7,21,0,0,1065,264,1,0,0,0,1066,1067,7,22,0,0,1067,
  	266,1,0,0,0,1068,1069,7,23,0,0,1069,268,1,0,0,0,1070,1071,7,24,0,0,1071,
  	270,1,0,0,0,1072,1073,7,25,0,0,1073,272,1,0,0,0,1074,1075,7,26,0,0,1075,
  	274,1,0,0,0,1076,1077,7,27,0,0,1077,276,1,0,0,0,1078,1079,7,28,0,0,1079,
  	278,1,0,0,0,1080,1081,7,29,0,0,1081,280,1,0,0,0,1082,1083,7,30,0,0,1083,
  	282,1,0,0,0,1084,1085,7,31,0,0,1085,284,1,0,0,0,1086,1087,7,32,0,0,1087,
  	286,1,0,0,0,26,0,831,839,846,854,863,871,878,880,888,893,899,906,908,
  	913,919,928,935,939,945,1001,1011,1015,1019,1029,1034,2,0,2,0,0,1,0
  };
  staticData->serializedATN = antlr4::atn::SerializedATNView(serializedATNSegment, sizeof(serializedATNSegment) / sizeof(serializedATNSegment[0]));

  antlr4::atn::ATNDeserializer deserializer;
  staticData->atn = deserializer.deserialize(staticData->serializedATN);

  const size_t count = staticData->atn->getNumberOfDecisions();
  staticData->decisionToDFA.reserve(count);
  for (size_t i = 0; i < count; i++) { 
    staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i), i);
  }
  mql_lexerLexerStaticData = staticData.release();
}

}

MQL_Lexer::MQL_Lexer(CharStream *input) : Lexer(input) {
  MQL_Lexer::initialize();
  _interpreter = new atn::LexerATNSimulator(this, *mql_lexerLexerStaticData->atn, mql_lexerLexerStaticData->decisionToDFA, mql_lexerLexerStaticData->sharedContextCache);
}

MQL_Lexer::~MQL_Lexer() {
  delete _interpreter;
}

std::string MQL_Lexer::getGrammarFileName() const {
  return "MQL_Lexer.g4";
}

const std::vector<std::string>& MQL_Lexer::getRuleNames() const {
  return mql_lexerLexerStaticData->ruleNames;
}

const std::vector<std::string>& MQL_Lexer::getChannelNames() const {
  return mql_lexerLexerStaticData->channelNames;
}

const std::vector<std::string>& MQL_Lexer::getModeNames() const {
  return mql_lexerLexerStaticData->modeNames;
}

const dfa::Vocabulary& MQL_Lexer::getVocabulary() const {
  return mql_lexerLexerStaticData->vocabulary;
}

antlr4::atn::SerializedATNView MQL_Lexer::getSerializedATN() const {
  return mql_lexerLexerStaticData->serializedATN;
}

const atn::ATN& MQL_Lexer::getATN() const {
  return *mql_lexerLexerStaticData->atn;
}




void MQL_Lexer::initialize() {
#if ANTLR4_USE_THREAD_LOCAL_CACHE
  mql_lexerLexerInitialize();
#else
  ::antlr4::internal::call_once(mql_lexerLexerOnceFlag, mql_lexerLexerInitialize);
#endif
}
